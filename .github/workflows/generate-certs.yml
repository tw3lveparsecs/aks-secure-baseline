name: Generate Certificates

on:
  workflow_dispatch:
  pull_request:
    branches:
    - main
    paths:
    - poc/armtemplates/LogAnalyticsWorkspace/*
    - poc/armtemplates/StorageAccount/*
    - poc/armtemplates/Firewall/*
    - poc/armtemplates/NetworkWatcher/*
    - poc/armtemplates/Nsgs/*
    - poc/armtemplates/RouteTable/*
    - poc/armtemplates/Vnet/*
    - poc/armtemplates/VnetPeering/*
    - poc/armtemplates/KeyVault/*
    - poc/armtemplates/ApplicationGateway/*
    - poc/armtemplates/PrivateDnsZones/*
    - poc/armtemplates/PrivateEndpoint/*
    - poc/armtemplates/ACR/*    
    - .github/variables/prereqs.env
    - .github/workflows/prereqs.yml
  push:
    branches:
    - poc
    paths:
    - poc/armtemplates/LogAnalyticsWorkspace/*
    - poc/armtemplates/StorageAccount/*
    - poc/armtemplates/Firewall/*
    - poc/armtemplates/NetworkWatcher/*
    - poc/armtemplates/Nsgs/*
    - poc/armtemplates/RouteTable/*
    - poc/armtemplates/Vnet/*
    - poc/armtemplates/VnetPeering/*
    - poc/armtemplates/KeyVault/*
    - poc/armtemplates/ApplicationGateway/*
    - poc/armtemplates/PrivateDnsZones/*
    - poc/armtemplates/PrivateEndpoint/*
    - poc/armtemplates/ACR/*    
    - .github/variables/prereqs.env
    - .github/workflows/prereqs.yml

jobs:
  test:
    if: ${{ contains(github.ref, 'refs/pull/') }}
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v2

    - name: Test ARM template
      uses: ./.github/actions/armttk
      with:
        templateFile: poc/armtemplates/Firewall/azuredeploy.json

    - name: Test ARM template
      uses: ./.github/actions/armttk
      with:
        templateFile: poc/armtemplates/NetworkWatcher/azuredeploy.json

    - name: Test ARM template
      uses: ./.github/actions/armttk
      with:
        templateFile: poc/armtemplates/Nsgs/azuredeploy.json

    - name: Test ARM template
      uses: ./.github/actions/armttk
      with:
        templateFile: poc/armtemplates/RouteTable/azuredeploy.json

    - name: Test ARM template
      uses: ./.github/actions/armttk
      with:
        templateFile: poc/armtemplates/Vnet/azuredeploy.json

    - name: Test ARM template
      uses: ./.github/actions/armttk
      with:
        templateFile: poc/armtemplates/VNetPeering/azuredeploy.json

  build:
    if: ${{ github.ref == 'refs/heads/poc' }}
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v2

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: drop
        path: |
          ./.github/actions/setvars
          ./.github/variables
          poc/armtemplates/LogAnalyticsWorkspace/*
          poc/armtemplates/StorageAccount/*
          poc/armtemplates/Firewall/*
          poc/armtemplates/NetworkWatcher/*
          poc/armtemplates/Nsgs/*
          poc/armtemplates/RouteTable/*
          poc/armtemplates/Vnet/*
          poc/armtemplates/VnetPeering/*
          poc/armtemplates/KeyVault/*
          poc/armtemplates/ApplicationGateway/*
          poc/armtemplates/PrivateDnsZones/*
          poc/armtemplates/PrivateEndpoint/*
          poc/armtemplates/ACR/*          
        if-no-files-found: error

  deploy:
    if: ${{ github.ref == 'refs/heads/poc' }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Build Artifacts
        uses: actions/download-artifact@v2
        with:
          name: drop
          path: drop

      - name: Configure Environment Variables
        uses: ./drop/.github/actions/setvars
        with:
          varFilePath: ./drop/.github/variables/*

      - name: Login to Azure
        uses: azure/login@v1.1
        with:
          creds: ${{ secrets[env.SECRET] }}
          #enable-AzPSSession: true

      - name: Generate Certificates
        uses: Azure/cli@v1.0.0
        with:
          inlineScript: |
            openssl req -x509 -nodes -days 365 -newkey rsa:2048 -out appgw.crt -keyout appgw.key -subj "/CN=bicycle.contoso.com/O=Contoso Bicycle"
            openssl pkcs12 -export -out appgw.pfx -in appgw.crt -inkey appgw.key -passout pass:
            export APP_GATEWAY_LISTENER_CERTIFICATE=$(cat appgw.pfx | base64 | tr -d '\n')
            echo $APP_GATEWAY_LISTENER_CERTIFICATE
            
            openssl req -x509 -nodes -days 365 -newkey rsa:2048 -out traefik-ingress-internal-aks-ingress-contoso-com-tls.crt -keyout traefik-ingress-internal-aks-ingress-contoso-com-tls.key -subj "/CN=*.aks-ingress.contoso.com/O=Contoso Aks Ingress"
            export AKS_INGRESS_CONTROLLER_CERTIFICATE_BASE64=$(cat traefik-ingress-internal-aks-ingress-contoso-com-tls.crt | base64 | tr -d '\n')