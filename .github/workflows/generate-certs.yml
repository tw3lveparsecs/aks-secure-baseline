name: Generate Certificates

on:
  workflow_dispatch:
  pull_request:
    branches:
    - main
    paths:
    - .github/variables/prereqs.env
    - .github/workflows/generate-certs.yml
  push:
    branches:
    - poc
    paths:
    - .github/variables/prereqs.env
    - .github/workflows/generate-certs.yml

jobs:
  build:
    if: ${{ github.ref == 'refs/heads/poc' }}
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v2

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: drop
        path: |
          ./.github/actions/setvars
          ./.github/variables
        if-no-files-found: error

  deploy:
    if: ${{ github.ref == 'refs/heads/poc' }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Build Artifacts
        uses: actions/download-artifact@v2
        with:
          name: drop
          path: drop

      - name: Configure Environment Variables
        uses: ./drop/actions/setvars
        with:
          varFilePath: ./drop/variables/*

      - name: Login to Azure
        uses: azure/login@v1.1
        with:
          creds: ${{ secrets[env.SECRET] }}
          #enable-AzPSSession: true

      - name: Generate Certificates
        uses: Azure/cli@v1.0.0
        with:
          inlineScript: |
            export DOMAINNAME=(`echo ${{ env.DOMAIN }} | tr '.' ' '`)            
            openssl req -x509 -nodes -days 365 -newkey rsa:2048 -out appgw.crt -keyout appgw.key -subj "/CN=bicycle.${{ env.DOMAIN }}/O=$DOMAINNAME Bicycle"
            openssl pkcs12 -export -out appgw.pfx -in appgw.crt -inkey appgw.key -passout pass:
            cat appgw.pfx | base64 | tr -d '\n' > appgw-base64.pfx            
            
            openssl req -x509 -nodes -days 365 -newkey rsa:2048 -out traefik-ingress-internal-aks-ingress-tls.crt -keyout traefik-ingress-internal-aks-ingress-tls.key -subj "/CN=*.aks-ingress.${{ env.DOMAIN }}/O=$DOMAINNAME Aks Ingress"            
            export AKS_INGRESS_CONTROLLER_CERTIFICATE_BASE64=$(cat traefik-ingress-internal-aks-ingress-tls.crt | base64 | tr -d '\n')
            
            az keyvault certificate import --file appgw.pfx --name bikeappwebcert --vault-name ${{ env.KVNAME }}
            az keyvault secret set --vault-name ${{ env.KVNAME }} --name bikeappaksiccert --value $AKS_INGRESS_CONTROLLER_CERTIFICATE_BASE64

            rm appgw.pfx
            rm appgw.crt
            rm appgw-base64.pfx
            rm traefik-ingress-internal-aks-ingress-tls.crt
            rm traefik-ingress-internal-aks-ingress-tls.key